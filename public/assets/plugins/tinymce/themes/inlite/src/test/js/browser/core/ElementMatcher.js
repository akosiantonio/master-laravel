asynctest("browser/core/ElementMatcherTest",["ephox.mcagar.api.TinyLoader","ephox.mcagar.api.TinyApis","ephox.agar.api.Step","ephox.agar.api.Assertions","tinymce/inlite/core/ElementMatcher","tinymce/inlite/core/PredicateId","ephox.agar.api.Pipeline"],function(e,t,n,a,r,c,i){var o=arguments[arguments.length-2],s=arguments[arguments.length-1],u=function(e){return function(t){return t===e}},h=function(){return!1},p=function(e,t,i,o){return n.sync(function(){var e,n;t.setContent(i),e=t.dom.select(o)[0],n=r.element(e,[c.create("a",h),c.create("b",u(e))])(t),a.assertEq(n.id,"b","Should be matching B"),a.assertEq(n.rect.w>0,!0,"Should be have width")})},m=function(e,t,i,o){return n.sync(function(){var e,n,s;t.setContent(i),e=t.dom.select(o)[0],n=t.dom.getParents(e),s=r.parent(n,[c.create("a",h),c.create("b",u(n[1])),c.create("c",u(n[0]))])(t),a.assertEq(s.id,"c","Should be matching C the closest one"),a.assertEq(s.rect.w>0,!0,"Should be have width")})};e.setup(function(e,n,a){var r=t(e);i.async({},[p(r,e,"<p>a</p>","p"),m(r,e,"<div><p><em>a</em></p></div>","em")],n,a)},{inline:!0},o,s)});